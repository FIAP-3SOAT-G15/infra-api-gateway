name: APIGatewayDeployment

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:
        inputs:
            branch:
                description: "Branch to use"
                required: true
                default: "main"

jobs:
    api_gateway_deployment:
        runs-on: ubuntu-latest
        defaults:
            run:
                working-directory: infra
        permissions:
            id-token: write
            contents: read
            pull-requests: write

        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
              with:
                  ref: ${{ github.event.inputs.branch }}

            - name: OpenAPI Generator
              uses: hatamiarash7/openapi-generator@v0.3.0
              with:
                  generator: openapi
                  openapi-file: ./../openapi/openapi.json
                  output: ./../openapi/.generated

            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                  role-to-assume: arn:aws:iam::202062340677:role/TechChallengeInfraDeployer
                  aws-region: ${{ vars.AWS_REGION }}

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                  cli_config_credentials_token: ${{ secrets.TF_CLOUD_USER_API_TOKEN }}

            - name: Terraform fmt
              id: fmt
              run: terraform fmt -check
              continue-on-error: true

            - name: Terraform Init
              id: init
              run: terraform init

            - name: Terraform Validate
              id: validate
              run: terraform validate

            - name: Terraform Plan
              id: plan
              run: terraform plan

            - name: Check Errors
              if: steps.plan.outcome == 'failure'
              run: exit 1

            - name: Terraform Apply
              run: terraform apply -auto-approve -input=false -var-file=environment/prod.tfvars
